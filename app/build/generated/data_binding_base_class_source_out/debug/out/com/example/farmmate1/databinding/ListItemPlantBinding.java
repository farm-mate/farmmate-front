// Generated by view binder compiler. Do not edit!
package com.example.farmmate1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.farmmate1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListItemPlantBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView listItemName;

  @NonNull
  public final ImageView listItemProfile;

  @NonNull
  public final TextView listItemStartdate;

  @NonNull
  public final ImageView plantInfoBackIb;

  private ListItemPlantBinding(@NonNull ConstraintLayout rootView, @NonNull TextView listItemName,
      @NonNull ImageView listItemProfile, @NonNull TextView listItemStartdate,
      @NonNull ImageView plantInfoBackIb) {
    this.rootView = rootView;
    this.listItemName = listItemName;
    this.listItemProfile = listItemProfile;
    this.listItemStartdate = listItemStartdate;
    this.plantInfoBackIb = plantInfoBackIb;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListItemPlantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListItemPlantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_item_plant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListItemPlantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.list_item_name;
      TextView listItemName = ViewBindings.findChildViewById(rootView, id);
      if (listItemName == null) {
        break missingId;
      }

      id = R.id.list_item_profile;
      ImageView listItemProfile = ViewBindings.findChildViewById(rootView, id);
      if (listItemProfile == null) {
        break missingId;
      }

      id = R.id.list_item_startdate;
      TextView listItemStartdate = ViewBindings.findChildViewById(rootView, id);
      if (listItemStartdate == null) {
        break missingId;
      }

      id = R.id.plant_info_back_ib;
      ImageView plantInfoBackIb = ViewBindings.findChildViewById(rootView, id);
      if (plantInfoBackIb == null) {
        break missingId;
      }

      return new ListItemPlantBinding((ConstraintLayout) rootView, listItemName, listItemProfile,
          listItemStartdate, plantInfoBackIb);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
